{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@tohsakarat/save-and-load-draft-automatically/webpack/bootstrap","webpack://@tohsakarat/save-and-load-draft-automatically/webpack/runtime/compat get default export","webpack://@tohsakarat/save-and-load-draft-automatically/webpack/runtime/define property getters","webpack://@tohsakarat/save-and-load-draft-automatically/webpack/runtime/hasOwnProperty shorthand","webpack://@tohsakarat/save-and-load-draft-automatically/webpack/runtime/make namespace object","webpack://@tohsakarat/save-and-load-draft-automatically/external root \"flarum.core.compat['common/extend']\"","webpack://@tohsakarat/save-and-load-draft-automatically/external root \"flarum.core.compat['forum/app']\"","webpack://@tohsakarat/save-and-load-draft-automatically/external root \"flarum.core.compat['common/components/TextEditor']\"","webpack://@tohsakarat/save-and-load-draft-automatically/external root \"flarum.core.compat['common/components/TextEditorButton']\"","webpack://@tohsakarat/save-and-load-draft-automatically/external root \"flarum.core.compat['forum/states/ComposerState.js']\"","webpack://@tohsakarat/save-and-load-draft-automatically/external root \"flarum.core.compat['components/DiscussionPage']\"","webpack://@tohsakarat/save-and-load-draft-automatically/external root \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@tohsakarat/save-and-load-draft-automatically/./src/forum/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/TextEditor'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/TextEditorButton'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/ComposerState.js'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/DiscussionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/IndexPage'];","import { extend, override } from 'flarum/common/extend';\r\nimport app from 'flarum/forum/app';\r\n\r\nimport TextEditor from \"flarum/common/components/TextEditor\";\r\nimport TextEditorButton from \"flarum/common/components/TextEditorButton\";\r\n\r\n//import Composer from \"flarum/forum/components/Composer.js\";\r\nimport ComposerState from \"flarum/forum/states/ComposerState.js\";\r\n\r\nimport DiscussionPage from 'flarum/components/DiscussionPage';\r\n\r\nimport IndexPage from 'flarum/forum/components/IndexPage';\r\n\r\n\r\napp.initializers.add('tohsakarat-save-and-load-draft-automatically', () => {\r\n//console.log('app.initializers.add')\r\n//console.log(extend)\r\n//console.log(override)\r\n      app.composer.findEnd=()=>{\r\n\t\t\tif(!app.composer?.editor || !!app.composer?.data()?.content.length>5 ||  !app.composer.editor?.moveCursorTo ||  !app.composer.editor?.insertAtCursor  || !app.composer.editor?.getSelectionRange)return;\r\n\t          let i = app.composer.editor.getSelectionRange()[1]\r\n\t\t\t  \r\n                        console.log('try find cursor')\r\n              while(1){ \r\n                try{\r\n                   //console.log(i)\r\n                   if(i>65535)return;\r\n\t\t\t\t\t\ti++\r\n                        app.composer.editor.moveCursorTo( i ) \r\n                        //for(let j =0;j<65536;j++){}\r\n                        \r\n                }catch(err)\r\n                { \r\n                  console.log('find cursor now')\r\n\t\t\t\t\ti--;\r\n\t\t\t\t\t\r\n                  //console.log(err);\r\n\t\t\t\t  break\r\n                }\r\n               }\r\n      }  \r\n\r\n      window.composerAutosave=()=>{\r\n        if(app.composer.data ){\r\n        let username = app.session.user.data.attributes.username;\r\n        if(app.composer.data && app.composer.data().relationships.discussion){\r\n        let discussionID = app.composer.data().relationships.discussion.data.id;\r\n        var storageName = username + 'replyTo' +discussionID\r\n        }else{\r\n        var storageName = 'newDiscussion'\r\n        }\r\n      \r\n        //console.log('123autosave ')\r\n        //console.log(storageName)\r\n        if(app.composer.position!='hidden'){\r\n        \r\n        if(app.composer.data && app.composer.data().content?.length>20){\r\n          window.localStorage.setItem(storageName ,app.composer.data().content);\r\n         // console.log('autosave '+storageName)\r\n        }\r\n        }   \r\n\r\n        window.setTimeout( ()=>{\r\n          window.composerAutosave()\r\n        },2000);\r\n        \r\n        }\r\n      }  \r\n  \r\n        window.composerAutoLoad=()=>{\r\n        if(app.composer.data ){\r\n        let username = app.session.user.data.attributes.username;\r\n        if( app.composer.data().relationships.discussion){\r\n        let discussionID = app.composer.data().relationships.discussion.data.id;\r\n        var storageName = username + 'replyTo' +discussionID\r\n        }else{\r\n        var storageName = 'newDiscussion'\r\n        }\r\n        if(app.composer.editor?.insertAtCursor){app.composer.editor.insertAtCursor(' ')\r\n        app.composer.editor.insertAtCursor(window.localStorage.getItem(storageName),false)}\r\n        }\r\n      }\r\n\r\n\r\n\r\n\r\n    extend(TextEditor.prototype, 'controlItems', function (items) {\r\n\t\r\n    //console.log('我在这里controlItems')\r\n    \r\n      items.add(\r\n        \"tohsaka-save-and-load-draft-automatically\",\r\n        <TextEditorButton\r\n          onclick={() => {\r\n            let username = app.session.user.data.attributes.username;\r\n            if(app.composer.data && app.composer.data().relationships.discussion){\r\n            let discussionID = app.composer.data().relationships.discussion.data.id;\r\n            var storageName = username + 'replyTo' +discussionID\r\n            }else{\r\n            var storageName = 'newDiscussion'\r\n            }\r\n            if(app.composer.data && !app.composer.data().content.length && !!window.localStorage.getItem(storageName)?.length){\r\n                window.composerAutoLoad()\r\n              \r\n            }else{\r\n              未找到草稿\r\n            }\r\n          }}\r\n          icon=\"fa fa-pen-circle\"\r\n        >\r\n\r\n          {app.translator.trans( `tohsakarat-save-and-load-draft-automatically.forum.buttons.load`)}\r\n        </TextEditorButton>\r\n      );\r\n \r\n    });\r\n    console.dir(TextEditor)\r\n    //window.Composer=Composer\r\n\r\n\r\n\r\n        extend(ComposerState.prototype, 'show', function () {\r\n        \r\n        //console.log('我在这里ComposerState.prototypeshow')\r\n          let username = app.session.user.data.attributes.username;\r\n          if(app.composer.data && app.composer.data().relationships.discussion){\r\n          let discussionID = app.composer.data().relationships.discussion.data.id;\r\n          var storageName = username + 'replyTo' +discussionID\r\n          }else{\r\n          var storageName = 'newDiscussion'\r\n          }\r\n      \r\n          //console.log(' loadComposer')\r\n        \r\n          setTimeout( ()=>{\r\n              //console.log('timeOut')\r\n              if(app.composer.data && !app.composer.data().content.length && !!window.localStorage.getItem(storageName)?.length){\r\n                console.log('有编辑记录')\r\n                let mymessage=confirm( app.translator.trans( `tohsakarat-save-and-load-draft-automatically.forum.states.ask-for-load`));\r\n                if(mymessage==true) {  window.composerAutoLoad()}\r\n                \r\n              }\r\n            },500);\r\n    \r\n\r\n          setTimeout(()=>{\r\n            window.composerAutosave()\r\n          },1000);\r\n        \r\n  \r\n        });\r\n    \r\n       extend(ComposerState.prototype, 'minimize', function () {\r\n              \r\n              /*if (!this.isVisible()) return;\r\n                \r\n              let trimHtml = (str)=>{\r\n              str=str.replaceAll('<br>','\\n')\r\n              str=str.replaceAll('<p>','\\n')\r\n              str=str.replaceAll('</p>','\\n')\r\n              str = str.replace(/<[^>]*>/g,\"\");\r\n              return str;\r\n              }*/\r\n\t\t\t  \r\n            // console.log('我在这里ComposerState.prototype, minimizeshow')\r\n            if(app.composer.editor && app.composer.editor.insertAtCursor){\r\n\t\t\t    app.composer.findEnd();\r\n              app.composer.editor.insertAtCursor('\\n');\r\n            }\r\n\r\n              //console.log('minimize')\r\n\r\n      }.bind(app.composer));\r\n      \r\n\r\n    \r\n\r\n\t  \r\n\t    override(ComposerState.prototype, 'preventExit', function () {\r\n\t     // console.log('我在这里ComposerState.prototype preventExitshow')\r\n\t\t\tif (!this.isVisible()) return;\r\n\t\t\tif (!this.onExit) return;\r\n\r\n\t\t\tif (this.onExit.callback()) {\r\n\t\t\tif(app.composer.saveDraft){\r\n\t\t\tif(!this.draftSaved){\r\n\t\t\t   \r\n\t\t\tlet mymessage=confirm( app.translator.trans( `tohsakarat-save-and-load-draft-automatically.forum.states.ask-for-save`));\r\n            if(mymessage==true) {  app.composer.saveDraft();this.draftSaved = true; return true}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet mymessage1=confirm(this.onExit.message);\r\n\t\t\t\r\n\t\t\tif(mymessage1==true){\r\n\t\t\t    //console.log('Nprevent')\r\n\t\t\t    this.draftSaved = undefined;\r\n\t\t\t    return false;\r\n\t\t\t    \r\n\t\t\t}else{\r\n\t\t\t   // console.log('prevent1')\r\n\t\t\t    return true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t}else{\r\n\t\t\tlet mymessage1=confirm(this.onExit.message);\r\n\t\t\t\r\n    \t\t\tif(mymessage1==true){\r\n    \t\t\t    //console.log('Nprevent')\r\n    \t\t\t   // this.draftSaved = undefined;\r\n    \t\t\t    return false;\r\n    \t\t\t    \r\n    \t\t\t}else{\r\n    \t\t\t   // console.log('prevent1')\r\n    \t\t\t    return true;\r\n    \t\t\t}\r\n    \t\t\t    \r\n\t\t\t    \r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t    //console.log('prevent2')\r\n\t\t\treturn true;\r\n\t\t\t    \r\n\t\t\t}\r\n\t\t}.bind(app.composer));\r\n\t  \r\n \r\n\r\n      \r\n      \r\n      \r\n    \r\n  });\r\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","editor","data","content","length","moveCursorTo","insertAtCursor","getSelectionRange","i","console","log","err","window","composerAutosave","username","relationships","discussion","storageName","id","localStorage","setItem","setTimeout","composerAutoLoad","getItem","extend","TextEditor","items","add","onclick","未找到草稿","icon","dir","ComposerState","confirm","bind","override","this","isVisible","onExit","callback","draftSaved","message","undefined"],"sourceRoot":""}